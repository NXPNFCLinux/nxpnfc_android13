diff --git a/core/java/android/nfc/INfcAdapter.aidl b/core/java/android/nfc/INfcAdapter.aidl
index cb9a3e43db81..3a77e7e24671 100644
--- a/core/java/android/nfc/INfcAdapter.aidl
+++ b/core/java/android/nfc/INfcAdapter.aidl
@@ -13,6 +13,26 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+ /******************************************************************************
+  *
+  *  The original Work has been changed by NXP.
+  *
+  *  Copyright 2015-2021 NXP
+  *
+  *  Licensed under the Apache License, Version 2.0 (the "License");
+  *  you may not use this file except in compliance with the License.
+  *  You may obtain a copy of the License at
+  *
+  *  http://www.apache.org/licenses/LICENSE-2.0
+  *
+  *  Unless required by applicable law or agreed to in writing, software
+  *  distributed under the License is distributed on an "AS IS" BASIS,
+  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  *  See the License for the specific language governing permissions and
+  *  limitations under the License.
+  *
+ ******************************************************************************/
+
 
 package android.nfc;
 
@@ -43,6 +63,8 @@ interface INfcAdapter
     INfcFCardEmulation getNfcFCardEmulationInterface();
     INfcAdapterExtras getNfcAdapterExtrasInterface(in String pkg);
     INfcDta getNfcDtaInterface(in String pkg);
+    IBinder getNfcAdapterVendorInterface(in String vendor);
+
     int getState();
     boolean disable(boolean saveState);
     boolean enable();
diff --git a/core/java/android/os/BinderProxy.java b/core/java/android/os/BinderProxy.java
index 63306612fdaf..3a64b6cb9bdb 100644
--- a/core/java/android/os/BinderProxy.java
+++ b/core/java/android/os/BinderProxy.java
@@ -227,7 +227,7 @@ public final class BinderProxy implements IBinder {
                 Log.v(Binder.TAG, "BinderProxy map growth! bucket size = " + size
                         + " total = " + totalSize);
                 mWarnBucketSize += WARN_INCREMENT;
-                if (Build.IS_DEBUGGABLE && totalSize >= CRASH_AT_SIZE) {
+                /*if (Build.IS_DEBUGGABLE && totalSize >= CRASH_AT_SIZE) {
                     // Use the number of uncleared entries to determine whether we should
                     // really report a histogram and crash. We don't want to fundamentally
                     // change behavior for a debuggable process, so we GC only if we are
@@ -246,7 +246,7 @@ public final class BinderProxy implements IBinder {
                                 + (totalSize - totalUnclearedSize) + " of " + totalSize
                                 + " are cleared");
                     }
-                }
+                }*/
             }
         }
 
diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 31229e97024f..e6ac70a21cde 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -2632,7 +2632,7 @@
     <bool name="config_syncstorageengine_masterSyncAutomatically">true</bool>
 
     <!--  Maximum number of supported users -->
-    <integer name="config_multiuserMaximumUsers">1</integer>
+    <integer name="config_multiuserMaximumUsers">2</integer>
 
     <!-- Maximum number of users we allow to be running at a time -->
     <integer name="config_multiuserMaxRunningUsers">3</integer>
@@ -2670,7 +2670,7 @@
     <integer name="config_userTypePackageWhitelistMode">13</integer> <!-- 1+4+8 -->
 
     <!-- Whether UI for multi user should be shown -->
-    <bool name="config_enableMultiUserUI">false</bool>
+    <bool name="config_enableMultiUserUI">true</bool>
 
     <!-- Whether the new Auto Selection Network UI should be shown -->
     <bool name="config_enableNewAutoSelectNetworkUI">false</bool>
diff --git a/services/core/java/com/android/server/Watchdog.java b/services/core/java/com/android/server/Watchdog.java
index c678a67e5bd3..b1f901a199f1 100644
--- a/services/core/java/com/android/server/Watchdog.java
+++ b/services/core/java/com/android/server/Watchdog.java
@@ -178,7 +178,7 @@ public class Watchdog implements Dumpable {
     private final HandlerChecker mMonitorChecker;
     private ActivityManagerService mActivity;
     private IActivityController mController;
-    private boolean mAllowRestart = true;
+    private boolean mAllowRestart = false;
     // We start with DEFAULT_TIMEOUT. This will then be update with the timeout values from Settings
     // once the settings provider is initialized.
     private volatile long mWatchdogTimeoutMillis = DEFAULT_TIMEOUT;
@@ -549,7 +549,7 @@ public class Watchdog implements Dumpable {
 
     public void setAllowRestart(boolean allowRestart) {
         synchronized (mLock) {
-            mAllowRestart = allowRestart;
+            mAllowRestart = false;
         }
     }
 
